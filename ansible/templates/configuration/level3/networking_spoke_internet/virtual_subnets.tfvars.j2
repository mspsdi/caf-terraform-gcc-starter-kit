virtual_subnets = {
  # private segment
{% if internet_app_aks | trim == '1' or internet_app_app_service | trim == '1' %}

  app_internet_subnet = {
    name    = "app-internet"
    cidr    = ["{{cidr_internet_zone_subnet_app}}"]
    nsg_key = "app_nsg"
    # route_table_key = "default_to_firewall_re1"    # enable this if route_tables is used
    enforce_private_link_endpoint_network_policies = "true"    
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }  
{% endif %}   
{% if internet_data_mssql | trim == '1' or internet_data_storage_account | trim == '1' %}

  db_internet_subnet = {
    name    = "db-internet"
    cidr    = ["{{cidr_internet_zone_subnet_data}}"]
    nsg_key = "db_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }  
{% endif %}  
  # # websubnet, service_subnet, chatgptsubnet, aisubnet,  applicaitongatewaysubnet
{% if internet_app_app_service | trim == '1' %}

  web_internet_subnet = {
    name    = "web-internet"
    cidr    = ["{{cidr_internet_zone_subnet_web}}"]
    nsg_key = "web_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    delegation = {
      name               = "webapp"
      service_delegation = "Microsoft.Web/serverFarms"
      actions            = ["Microsoft.Network/virtualNetworks/subnets/action"]
    }       
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }  
{% endif %}  

  # always created
  # private endpoint for keyvault, acr etc ...  
  service_internet_subnet = {
    name    = "service-internet"
    cidr    = ["{{cidr_internet_zone_subnet_service}}"]
    nsg_key = "service_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  } 
{% if internet_app_container_instance | trim == '1' %}

  chatgpt_internet_subnet = {
    name    = "chatgpt-internet"
    cidr    = ["{{cidr_internet_zone_subnet_chatgpt}}"]
    nsg_key = "chatgpt_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    delegation = {
      name               = "container_groups"
      service_delegation = "Microsoft.ContainerInstance/containerGroups" # Microsoft.Web/serverFarms"
      actions            = ["Microsoft.Network/virtualNetworks/subnets/action"]
    }      
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  } 
{% endif %}    
{% if internet_app_openai | trim == '1' or internet_app_search_service | trim == '1' %}

  ai_internet_subnet = {
    name    = "ai-internet"
    cidr    = ["{{cidr_internet_zone_subnet_ai}}"]
    nsg_key = "ai_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }   
{% endif %}    
{% if internet_app_agw | trim == '1' %}

  applicaitongateway_internet_subnet = {
    name    = "applicationgateway-internet"
    cidr    = ["{{cidr_internet_zone_subnet_applicationgateway}}"]
    nsg_key = "app_nsg" # "applicationgateway_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }  
{% endif %}    
{% if internet_app_linux_function_app | trim == '1' %}

  # delegated subnet linux function app
  functionapps_internet_subnet = {
    name    = "function-apps-internet"
    cidr    = ["{{cidr_internet_zone_subnet_linux_function_app}}"] # ["100.2.0.224/27"]
    nsg_key = "functionapps_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"   
    # TODO: add Delegated function - Delegated to "Microsoft.Web/serverFarms"
    delegation = {
      name               = "functions"
      service_delegation = "Microsoft.Web/serverFarms"
      actions            = ["Microsoft.Network/virtualNetworks/subnets/action"]
    }    
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }
{% endif %}    
{% if internet_app_logic_app | trim == '1' %}

  logic_app_internet_subnet = {
    name    = "logic-app-internet"
    cidr    = ["{{cidr_internet_zone_subnet_logic_app}}"] # ["100.2.0.224/27"]
    nsg_key = "functionapps_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"  
    delegation = {
      name               = "functions"
      service_delegation = "Microsoft.Web/serverFarms"
      actions            = ["Microsoft.Network/virtualNetworks/subnets/action"]
    }        
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }        
{% endif %}    
{% if internet_app_apim | trim == '1' %}

  it_internet_subnet = {
    name    = "it-internet"
    cidr    = ["{{cidr_internet_zone_subnet_it}}"]
    nsg_key = "it_nsg"
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]
    enforce_private_link_endpoint_network_policies = "true"    
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_spoke_internet_re1"              
{% endif %}
    } 
  }  
{% endif %}     
  # end private segment
}

