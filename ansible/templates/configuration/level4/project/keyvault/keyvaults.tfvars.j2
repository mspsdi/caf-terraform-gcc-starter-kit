keyvaults = {
  shared_kv1 = {
    name               = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}shared-kv1"
    resource_group_key = "kv_rg_re1"
    sku_name           = "standard"

    enabled_for_deployment = true

    creation_policies = {
      logged_in_user = {
        certificate_permissions = ["Get", "List", "Update", "Create", "Import", "Delete", "Purge", "Recover"]
        secret_permissions      = ["Set", "Get", "List", "Delete", "Purge", "Recover"]
      }
    }

    # Optional - private endpoint
    private_endpoints = {
      # Require enforce_private_link_endpoint_network_policies set to true on the subnet
      pe1 = {
        name               = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}shared-kv-pep"
        resource_group_key = "kv_rg_re1"

{% if gcc_platform_import | trim == '0' %}
        subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-service-internet"
{% else %}
        lz_key = "networking_spoke_internet"
        subnet_key = "service_internet_subnet"
{% endif %} 

        private_service_connection = {
          name                 = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}shared-kv-psc"
          is_manual_connection = false
          subresource_names    = ["Vault"]
        }

        # # TODO: test private
        private_dns = {
          zone_group_name = "default"
          lz_key          = "networking_spoke_internet" # if DNS keys is deployed in remote landingzone
          keys = ["kv_dns_re1"]
        }
      }
    }   

    diagnostic_profiles = {
      operations = {
        definition_key   = "keyvault"
        destination_type = "log_analytics" # or destination_type = "event_hub"
        destination_key  = "central_logs"          
      }
    }

    tags = { 
      purpose = "{{tag_zone_code}} keyvault" 
      # project_code = "{{project_code}}" 
      env = "{{caf_environment}}" 
      zone = "{{tag_zone_code}}"
      tier = "{{tag_tier_code}}"          
    } 

  }
}

keyvault_access_policies = {
  shared_kv1 = {
    shared_kv_mi = {
      managed_identity_key    = "shared_kv_mi"
      certificate_permissions = ["Get"]
      secret_permissions      = ["Get"]
    }
  }
}