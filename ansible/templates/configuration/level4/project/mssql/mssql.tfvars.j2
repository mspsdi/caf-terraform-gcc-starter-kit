mssql_servers = {
  mssql_server_re1 = {
    name                = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}mssql-server"
    region              = "region1"
    resource_group_key  = "mssql_rg_re1"
    administrator_login = "sqladminuser01"
    secret_name         = "{{project_code}}-sql-mssql-server-password"

    keyvault = {
      key    = "sql_kv_re1"
      # lz_key = "shared_services"
    }

    system_msi                    = true
    
    # # ** IMPORTANT ** a user assigned identity or a service principal must be used when using a custom private dns zone
    # identity = {
    #   type                 = "UserAssigned"
    #   lz_key          = "shared_services" # if DNS keys is deployed in remote landingzone    
    #   managed_identity_keys = ["aks_usermsi","mssql_usermsi"]
    # }     
    
    public_network_access_enabled = false
    minimum_tls_version           = "1.2"

    tags = { 
      purpose = "{{tag_zone_code}} mssql server" 
      project_code = "{{project_code}}" 
      env = "{{caf_environment}}" 
      zone = "{{tag_zone_code}}"
      tier = "{{tag_tier_code}}"         
    } 
    
    private_endpoints = {
      private-link-sql = {
        name = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}pep-mssql-server"

{% if gcc_platform_import | trim == '0' %}
        subnet_id          = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-db-internet"
{% else %}
        lz_key = "networking_spoke_internet"
        virtual_subnet_key = "db_internet_subnet"
{% endif %} 

        resource_group_key = "mssql_rg_re1"

        private_service_connection = {
          name                 = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}psc-sql"
          is_manual_connection = false
          subresource_names    = ["sqlServer"]
        }

        private_dns = {
          zone_group_name = "default"          
          lz_key          = "networking_spoke_internet" # if DNS keys is deployed in remote landingzone
          keys   = ["db_dns_re1"]
        }
      }
    }

  }
}

mssql_databases = {
  sqldb1 = {
    resource_group_key = "mssql_rg_re1"
    mssql_server_key   = "mssql_server_re1"
    elastic_pool_key   = "ep1"
    name               = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}sqldb1"
    # to avoid update due to "geo_backup_enabled = true -> false"
    # geo_backup_enabled is only applicable for DataWarehouse SKUs (DW*). This setting is ignored for all other SKUs.
    geo_backup_enabled = true # since it is ignore caf terraform is default is false

    diagnostic_profiles = {
      central_logs_region = {
        definition_key   = "mssql_db"
        destination_type = "log_analytics"
        destination_key  = "central_logs"
        # lz_key = "shared_services" # TODO: is this required?
      }
    }

    tags = { 
      purpose = "{{tag_zone_code}} mssql database" 
      project_code = "{{project_code}}" 
      env = "{{caf_environment}}" 
      zone = "{{tag_zone_code}}"
      tier = "{{tag_tier_code}}"          
    } 

  }
  
}

mssql_elastic_pools = {
  ep1 = {
    resource_group_key = "mssql_rg_re1"
    mssql_server_key   = "mssql_server_re1"
    name               = "{{env_code}}{{dash_1}}{{zone_code}}{{dash_2}}{{tier_code}}{{dash_last}}ep1"
    max_size_gb        = 756

    sku = {
      name     = "GP_Gen5"
      tier     = "GeneralPurpose"
      family   = "Gen5"
      capacity = 4
    }

    per_database_settings = {
      min_capacity = 0.25
      max_capacity = 4
    }
  }
}
